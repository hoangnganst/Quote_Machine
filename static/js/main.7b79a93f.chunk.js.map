{"version":3,"sources":["api/Quote.ts","components/Quote/Quote.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["getQuote","a","axios","request","method","url","then","response","catch","error","console","Quote","useState","quotes","setQuotes","quote","author","setQuote","useEffect","status","data","length","fetchQuote","Math","floor","random","id","className","onClick","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0PAGaA,EAAQ,uCAAG,4BAAAC,EAAA,+EAICC,IACrBC,QAAQ,CACRC,OAAQ,MACRC,IAAK,2IAELC,MAAK,SAAUC,GACf,OAAOA,KAEPC,OAAM,SAAUC,GAChBC,QAAQD,MAAMA,MAbM,cAIhBF,EAJgB,yBAefA,GAfe,wFAAH,qD,OC2CNI,EA1CS,WAAO,IAAD,EACDC,mBAAqB,IADpB,mBACtBC,EADsB,KACdC,EADc,OAEHF,mBAAmB,CAAEG,MAAO,GAAIC,OAAQ,KAFrC,mBAEtBD,EAFsB,KAEfE,EAFe,KAsB7B,OAlBAC,qBAAU,YACO,uCAAG,4BAAAjB,EAAA,sEACKD,IADL,QACZO,EADY,SAIG,MAApBA,EAASY,QACTZ,EAASa,KAAKP,OAAOQ,OAAS,GAE9BP,EAAUP,EAASa,KAAKP,QAPP,2CAAH,qDAUhBS,KACE,IAEHJ,qBAAU,WACLL,EAAOQ,OAAS,GACnBJ,EAASJ,EAAOU,KAAKC,MAAMD,KAAKE,SAAWZ,EAAOQ,YACjD,CAACR,IAEH,mCACC,sBACCa,GAAG,YACHC,UAAU,iFAFX,UAIC,qBAAKD,GAAG,OAAR,SAAgBX,EAAMA,QACtB,qBAAKW,GAAG,SAAR,SAAkBX,EAAMC,SACxB,wBACCU,GAAG,YACHE,QAAS,WACRX,EAASJ,EAAOU,KAAKC,MAAMD,KAAKE,SAAWZ,EAAOQ,WAHpD,uBCtBWQ,MARf,WACC,OACC,qBAAKF,UAAU,MAAf,SACC,cAAC,EAAD,OCOYG,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqB1B,MAAK,YAAkD,IAA/C2B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCHdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.7b79a93f.chunk.js","sourcesContent":["import axios, { AxiosResponse } from 'axios';\r\nimport { QuoteDto } from './QuoteDto';\r\n\r\nexport const getQuote = async (): Promise<void | AxiosResponse<{\r\n\tquotes: QuoteDto[];\r\n}>> => {\r\n\ttry {\r\n\t\tconst response = await axios\r\n\t\t\t.request({\r\n\t\t\t\tmethod: 'GET',\r\n\t\t\t\turl: 'https://gist.githubusercontent.com/camperbot/5a022b72e96c4c9585c32bf6a75f62d9/raw/e3c6895ce42069f0ee7e991229064f167fe8ccdc/quotes.json'\r\n\t\t\t})\r\n\t\t\t.then(function (response: AxiosResponse<{ quotes: QuoteDto[] }>) {\r\n\t\t\t\treturn response;\r\n\t\t\t})\r\n\t\t\t.catch(function (error) {\r\n\t\t\t\tconsole.error(error);\r\n\t\t\t});\r\n\t\treturn response;\r\n\t} catch (error) {}\r\n};\r\n","import React, { useEffect, useState } from 'react';\r\nimport { getQuote } from '../../api/Quote';\r\nimport { QuoteDto } from '../../api/QuoteDto';\r\n\r\nconst Quote: React.FC = () => {\r\n\tconst [quotes, setQuotes] = useState<QuoteDto[]>([]);\r\n\tconst [quote, setQuote] = useState<QuoteDto>({ quote: '', author: '' });\r\n\r\n\tuseEffect(() => {\r\n\t\tconst fetchQuote = async () => {\r\n\t\t\tconst response = await getQuote();\r\n\t\t\tif (\r\n\t\t\t\tresponse &&\r\n\t\t\t\tresponse.status === 200 &&\r\n\t\t\t\tresponse.data.quotes.length > 0\r\n\t\t\t) {\r\n\t\t\t\tsetQuotes(response.data.quotes);\r\n\t\t\t}\r\n\t\t};\r\n\t\tfetchQuote();\r\n\t}, []);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (quotes.length > 0)\r\n\t\t\tsetQuote(quotes[Math.floor(Math.random() * quotes.length)]);\r\n\t}, [quotes]);\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div\r\n\t\t\t\tid=\"quote-box\"\r\n\t\t\t\tclassName=\"p-6 max-w-sm mx-auto bg-white rounded-xl shadow-md flex items-center space-x-4\"\r\n\t\t\t>\r\n\t\t\t\t<div id=\"text\">{quote.quote}</div>\r\n\t\t\t\t<div id=\"author\">{quote.author}</div>\r\n\t\t\t\t<button\r\n\t\t\t\t\tid=\"new-quote\"\r\n\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\tsetQuote(quotes[Math.floor(Math.random() * quotes.length)]);\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\tnew\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n};\r\nexport default Quote;\r\n","import React from 'react';\nimport './App.css';\nimport Quote from './components/Quote/Quote';\n\nfunction App() {\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<Quote />\n\t\t</div>\n\t);\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}